// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`genVue has the expected ouput structure as page and with state 1`] = `
"<script>
import { mapState, mapGetters, mapActions } from 'vuex';

export default {
  name: 'TestComponent',

  components: {},

  props: {},

  data() {
    return {};
  },

  computed: {
    ...mapState({}),

    ...mapGetters({}),
  },

  watch: {},

  async created() {
    await this.loadPageData();
  },

  mounted() {},

  // When route changes and this component is already rendered, this guard is used
  async beforeRouteUpdate(to, from, next) {
    await this.loadPageData();

    return next();
  },

  methods: {
    ...mapActions({}),

    async loadPageData() {},
  },
};
</script>

<template>
  <div class=\\"test-component\\">
    (ಠ益ಠ)
  </div>
</template>

<style lang=\\"scss\\">
  // Mobile / Baseline
  .test-component {}

  // Tablets
  @media only screen and (min-width: 768px) {}

  // Hi-Res Tablets
  @media only screen and (min-width: 1024px) {}

  // Desktops
  @media only screen and (min-width: 1200px) {}

  // Larger Desktops
  @media only screen and (min-width: 1920px) {}
</style>
"
`;

exports[`genVue has the expected ouput structure as page without state 1`] = `
"<script>
export default {
  name: 'TestComponent',

  components: {},

  props: {},

  data() {
    return {};
  },

  computed: {},

  watch: {},

  async created() {
    await this.loadPageData();
  },

  mounted() {},

  // When route changes and this component is already rendered, this guard is used
  async beforeRouteUpdate(to, from, next) {
    await this.loadPageData();

    return next();
  },

  methods: {
    async loadPageData() {},
  },
};
</script>

<template>
  <div class=\\"test-component\\">
    (ಠ益ಠ)
  </div>
</template>

<style lang=\\"scss\\">
  // Mobile / Baseline
  .test-component {}

  // Tablets
  @media only screen and (min-width: 768px) {}

  // Hi-Res Tablets
  @media only screen and (min-width: 1024px) {}

  // Desktops
  @media only screen and (min-width: 1200px) {}

  // Larger Desktops
  @media only screen and (min-width: 1920px) {}
</style>
"
`;

exports[`genVue has the expected ouput structure not as page and without state 1`] = `
"<script>
export default {
  name: 'TestComponent',

  components: {},

  props: {},

  data() {
    return {};
  },

  computed: {},

  watch: {},

  created() {},

  mounted() {},

  methods: {},
};
</script>

<template>
  <div class=\\"test-component\\">
    (ಠ益ಠ)
  </div>
</template>

<style lang=\\"scss\\">
  // Mobile / Baseline
  .test-component {}

  // Tablets
  @media only screen and (min-width: 768px) {}

  // Hi-Res Tablets
  @media only screen and (min-width: 1024px) {}

  // Desktops
  @media only screen and (min-width: 1200px) {}

  // Larger Desktops
  @media only screen and (min-width: 1920px) {}
</style>
"
`;

exports[`genVue has the expected ouput structure not as page with state 1`] = `
"<script>
import { mapState, mapGetters, mapActions } from 'vuex';

export default {
  name: 'TestComponent',

  components: {},

  props: {},

  data() {
    return {};
  },

  computed: {
    ...mapState({}),

    ...mapGetters({}),
  },

  watch: {},

  created() {},

  mounted() {},

  methods: {
    ...mapActions({}),
  },
};
</script>

<template>
  <div class=\\"test-component\\">
    (ಠ益ಠ)
  </div>
</template>

<style lang=\\"scss\\">
  // Mobile / Baseline
  .test-component {}

  // Tablets
  @media only screen and (min-width: 768px) {}

  // Hi-Res Tablets
  @media only screen and (min-width: 1024px) {}

  // Desktops
  @media only screen and (min-width: 1200px) {}

  // Larger Desktops
  @media only screen and (min-width: 1920px) {}
</style>
"
`;
